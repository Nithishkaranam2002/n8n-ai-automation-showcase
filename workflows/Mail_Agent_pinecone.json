{
  "name": "Mail Agent pinecone",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "20eb0266-b67d-49d8-ab74-86e2662ca31c",
      "name": "When chat message received",
      "webhookId": "5029dd43-7336-4b06-b656-9757b2dc6f33"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "- The email must include a **subject line**.\n- It should begin with an appropriate **salutation** (e.g., \"Hello [Name]\" or \"Dear [Name]\").\n- The **main content** should be clear, concise, and friendly.\n- The email should end with a **suitable closing phrase** (e.g., \"Best regards, Arnie\").\n\n### Dynamic Personalization:\n- Automatically replace the placeholder **[Name]** with the recipient’s actual name.\n- If the name is missing, use a general salutation such as **\"Hello, dear team\"**.\n\n### Review & Optimization:\n- Avoid unnecessary **repetitions** or vague wording.\n- If the message is **too long or unstructured**, summarize it clearly.\n\n### Email Types (Adaptable Based on Context):\n- Standard information email\n- Reminder or follow-up\n- Offer or marketing email\n- Support or customer service request\n\n---\n\n### Example of a Generated Email:\n\n**Subject:** Important Information for You, [Name]\n\n**Text:**  \nHello [Name],\n\nI hope you are doing well. I wanted to quickly inform you about [Topic]. If you have any questions or need further information, feel free to reach out.\n\nBest regards,  \nNithish\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "4075b8f2-48d6-4475-b1b2-e7010fea5b1d",
      "name": "AI Agent",
      "notes": "- The email must include a **subject line**.\n- It should begin with an appropriate **salutation** (e.g., \"Hello [Name]\" or \"Dear [Name]\").\n- The **main content** should be clear, concise, and friendly.\n- The email should end with a **suitable closing phrase** (e.g., \"Best regards, Arnie\").\n\n### Dynamic Personalization:\n- Automatically replace the placeholder **[Name]** with the recipient’s actual name.\n- If the name is missing, use a general salutation such as **\"Hello, dear team\"**.\n\n### Review & Optimization:\n- Avoid unnecessary **repetitions** or vague wording.\n- If the message is **too long or unstructured**, summarize it clearly.\n\n### Email Types (Adaptable Based on Context):\n- Standard information email\n- Reminder or follow-up\n- Offer or marketing email\n- Support or customer service request\n\n---\n\n### Example of a Generated Email:\n\n**Subject:** Important Information for You, [Name]\n\n**Text:**  \nHello [Name],\n\nI hope you are doing well. I wanted to quickly inform you about [Topic]. If you have any questions or need further information, feel free to reach out.\n\nBest regards,  \nNithish\n"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        200
      ],
      "id": "c5408f0f-eee8-4c6e-a84c-76bae450923f",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "5FGlCnv5v3ZX8TcH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Use this tool to get Email Information, you find all relevant mail adresses."
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        380,
        220
      ],
      "id": "23cd00f2-afd5-40ea-83dc-de1d8c2b3c79",
      "name": "Vectorstore Mails"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "n8nmailtopinecone",
          "mode": "list",
          "cachedResultName": "n8nmailtopinecone"
        },
        "options": {
          "pineconeNamespace": "docsmail"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        140,
        380
      ],
      "id": "fa3eb6ff-217f-44ed-b407-c947726326b6",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "XeV0ELjfPd1Jrlh5",
          "name": "PineconeApi account 3"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        100,
        540
      ],
      "id": "5bbffb56-f79d-45f5-b9b0-9f4b0247358c",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "5FGlCnv5v3ZX8TcH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        520,
        440
      ],
      "id": "d1064f08-4a90-4811-8f68-82abccc97032",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "5FGlCnv5v3ZX8TcH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "use this tool to send mails.",
        "workflowId": {
          "__rl": true,
          "value": "5cg4BBvx6l2iiJgI",
          "mode": "list",
          "cachedResultName": "Send mails to pinecone"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        780,
        220
      ],
      "id": "3b604f65-f5c2-4e7d-98ae-16110770c891",
      "name": "Send Mail"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vectorstore Mails": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vectorstore Mails",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vectorstore Mails",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Send Mail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3f444bd3-1f49-440c-ae12-14587102289f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4180e2cf67ed4ac5e9e97e699b081c9253c906a5e75883081221cec5f621a7a1"
  },
  "id": "Huh7gmS7Rj254pv7",
  "tags": []
}