{
  "name": "sponsorship mail",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -420,
        -140
      ],
      "id": "e5f25a95-0054-4b4f-b630-345846ff172e",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "e8j63stivTc03woG",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f2e1af35-9010-4905-b395-49da542b8a60",
              "name": "Email Context",
              "value": "=From: {{ $json.headers.from }}\n\nSubject: {{ $json.headers.subject }}\n\nEmail body: {{ $json.text }}\n\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -260,
        -140
      ],
      "id": "84cd5787-eff2-42f9-917a-a8495ae5ec66",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Role:**\nYour task is to determine whether an email is related to a sponsorship deal or not.\n\nRespond with a JSON object containing the following fields:\n\n-**isSponsoring:** Can be either \"true\" or \"false\".\n-**reasoning:** Explain your answer.\n\nThink step by step about your response.\n\n{{ $json['Email Context'] }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -100,
        -140
      ],
      "id": "6721abed-e8ef-450b-81aa-79993c97dfad",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -160,
        100
      ],
      "id": "22abda5f-de51-4ca7-897f-3d9343ddfd97",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "5FGlCnv5v3ZX8TcH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"isSponsoring\": {\n\t\t\t\"type\": \"boolean\"\n\t\t},\n\t\t\"reasoning\": {\n\t\t\t\"type\": \"string\"\n\t\t\t\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        200,
        80
      ],
      "id": "b8f0ebb5-7ec6-4d64-8895-87090f5a1064",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9af69743-3df1-42e6-ba2e-1ea5f6d79778",
              "leftValue": "={{ $json.output.isSponsoring }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        -140
      ],
      "id": "f684a8be-6a8c-449a-be58-b06cc9f1e4a4",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        440,
        80
      ],
      "id": "f31d4137-e26e-4059-a266-47d8b742aeef",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=**Role:**  \nYou work for a technology solutions company called *G5infotech*.  \nYour task is to respond to business partnership and service inquiry emails by drafting a clear, professional, and friendly reply.\n\n**Task:**  \nCarefully review the email context below and write a polite and professional email in response.  \nReturn only the **email body in HTML format**—do **not** include a header, only the body!  \nThe email should include details about the services G5infotech offers and any relevant pricing or conditions, if applicable.\n\n**Conditions:**  \n\n### Company Overview – *G5infotech*\n\n- **Company Name:** *G5infotech*\n- **Core Services:**  \n  - Software Development  \n  - Web & Mobile Application Development  \n  - AI & Automation Solutions  \n  - Cloud Services & IT Consulting\n- **Years of Experience:** 8+ years delivering technology solutions\n- **Clientele:** Startups, SMEs, and Enterprise clients across multiple industries\n\n### Pricing & Engagement:  \n- Project-based pricing: Varies based on scope and technology stack  \n- Monthly retainer plans available for long-term support and development  \n\n### Additional Info:  \n*G5infotech* focuses on delivering **high-quality, scalable, and efficient technology solutions** tailored to each client’s business needs. The company only engages in partnerships that align with its mission to create real business value through technology.\n\nIn your reply:\n- Maintain a professional and helpful tone.\n- Confirm receipt of the inquiry and express appreciation.\n- Provide a brief summary of G5infotech’s services.\n- Offer to schedule a call or provide further details if needed.\n"
            },
            {
              "content": "=Email Context: {{ $('Edit Fields').item.json['Email Context'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        380,
        -200
      ],
      "id": "6c6b8b79-3047-4a0b-9ee0-974d18d9789e",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "5FGlCnv5v3ZX8TcH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "message": "={{ $json.message.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        740,
        -200
      ],
      "id": "3e80e223-8740-4c64-87b1-adab35bb8d3f",
      "name": "Reply to a message",
      "webhookId": "6231164c-b005-4dea-aa26-ced96b7ebe3c",
      "credentials": {
        "gmailOAuth2": {
          "id": "e8j63stivTc03woG",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Reply to a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bb169559-4461-47b9-9665-66c2534a90df",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4180e2cf67ed4ac5e9e97e699b081c9253c906a5e75883081221cec5f621a7a1"
  },
  "id": "Alxzf0uxxpOpiz7j",
  "tags": []
}